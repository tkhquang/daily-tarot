<div :if={not @is_loading} class="container flex h-full w-full flex-1 flex-col">
  <div class="typography my-4">
    <ol class="mx-4 list-decimal md:mx-8">
      <li>Regain calmness, take a deep breath, close your eyes for about 10 seconds.</li>

      <li>Answer the question: 'What do you want to know?.'</li>

      <li>Choose 1 of the 6 cards below and see the result.</li>
    </ol>
  </div>

  <ul class="my-4 grid grid-cols-3 gap-4 md:grid-cols-6">
    <%= for {card, index} <- @random_cards |> Enum.with_index() do %>
      <li class="">
        <.flip_card
          card={card}
          index={index}
          is_flipped={@flipped_card != nil}
          flipped_card={@flipped_card}
        />
      </li>
    <% end %>
  </ul>

  <div
    id="interpretation-content"
    class="group flex h-full w-full flex-1 flex-col items-center justify-center"
  >
    <div id="content" class="block group-[.phx-click-loading]:hidden">
      <.interpretation :if={@flipped_card != nil} render_card_info={@render_card_info} />
      <div :if={@flipped_card != nil} class="my-4 flex w-full justify-center space-x-2">
        <.button
          id={UUID.uuid4()}
          phx-click={
            JS.remove_class("rotate-y-180", to: ".card[data-selected='true']")
            |> JS.set_attribute({"data-selected", "false"}, to: ".card[data-selected='true']")
            |> JS.push("pick_another_card")
          }
          phx-hook="ScrollToTop"
        >
          Pick another card
        </.button>

        <.button
          id={UUID.uuid4()}
          phx-click={
            JS.remove_class("rotate-y-180",
              to: ".card[data-selected='true']"
            )
            |> JS.set_attribute({"data-selected", "false"}, to: ".card[data-selected='true']")
            |> JS.push("shuffle_the_cards",
              loading: "#interpretation-content"
            )
          }
          phx-hook="ScrollToTop"
        >
          Shuffle the cards
        </.button>
      </div>
    </div>

    <div id="content-loading" class="hidden group-[.phx-click-loading]:block">Please Wait...</div>

    <.svelte name="Example" props={%{number: @number}} socket={@socket} />
  </div>
</div>

<div :if={@is_loading} class="flex h-full w-full flex-1 items-center justify-center">
  Loading...
</div>
